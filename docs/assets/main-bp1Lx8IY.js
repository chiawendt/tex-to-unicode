(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))e(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&e(i)}).observe(document,{childList:!0,subtree:!0});function t(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function e(n){if(n.ep)return;n.ep=!0;const o=t(n);fetch(n.href,o)}})();function x(r,a){const t=L(r,a),e=z(t),[n,o]=[e.indexOf(r),e.indexOf(a)].sort();return e.slice(n,o+1)}function q(r){const a=[];let t=r;for(a.push(t);t?.parentNode;)t=t.parentNode,a.push(t);return a.reverse()}function L(r,a){const t=q(r),e=q(a);let n=0;for(;n<t.length&&t[n]===e[n];n++);return t[n-1]}function z(r){const a=[],t=e=>{if(e){a.push(e);for(const n of Array.from(e.childNodes||[]))t(n)}};return t(r),a}class h{constructor(a){this.action=a}parse(a){const t={index:0,line:1,column:1},e=new w({input:a,location:t}),n=this.skip(I).action(e);return n.type==="ActionOK"?{type:"ParseOK",value:n.value}:{type:"ParseFail",location:n.furthest,expected:n.expected}}tryParse(a){const t=this.parse(a);if(t.type==="ParseOK")return t.value;const{expected:e,location:n}=t,{line:o,column:i}=n,c=`parse error at line ${o} column ${i}: expected ${e.join(", ")}`;throw new Error(c)}and(a){return new h(t=>{const e=this.action(t);if(e.type==="ActionFail")return e;t=t.moveTo(e.location);const n=t.merge(e,a.action(t));if(n.type==="ActionOK"){const o=[e.value,n.value];return t.merge(n,t.ok(n.location.index,o))}return n})}skip(a){return this.and(a).map(([t])=>t)}next(a){return this.and(a).map(([,t])=>t)}or(a){return new h(t=>{const e=this.action(t);return e.type==="ActionOK"?e:t.merge(e,a.action(t))})}chain(a){return new h(t=>{const e=this.action(t);if(e.type==="ActionFail")return e;const n=a(e.value);return t=t.moveTo(e.location),t.merge(e,n.action(t))})}map(a){return this.chain(t=>d(a(t)))}thru(a){return a(this)}desc(a){return new h(t=>{const e=this.action(t);return e.type==="ActionOK"?e:{type:"ActionFail",furthest:e.furthest,expected:a}})}wrap(a,t){return a.next(this).skip(t)}trim(a){return this.wrap(a,a)}repeat(a=0,t=1/0){if(!_(a,t))throw new Error(`repeat: bad range (${a} to ${t})`);return a===0?this.repeat(1,t).or(d([])):new h(e=>{const n=[];let o=this.action(e);if(o.type==="ActionFail")return o;for(;o.type==="ActionOK"&&n.length<t;){if(n.push(o.value),o.location.index===e.location.index)throw new Error("infinite loop detected; don't call .repeat() with parsers that can accept zero characters");e=e.moveTo(o.location),o=e.merge(o,this.action(e))}return o.type==="ActionFail"&&n.length<a?o:e.merge(o,e.ok(e.location.index,n))})}sepBy(a,t=0,e=1/0){if(!_(t,e))throw new Error(`sepBy: bad range (${t} to ${e})`);return t===0?this.sepBy(a,1,e).or(d([])):e===1?this.map(n=>[n]):this.chain(n=>a.next(this).repeat(t-1,e-1).map(o=>[n,...o]))}node(a){return b(k,this,k).map(([t,e,n])=>({type:"ParseNode",name:a,value:e,start:t,end:n}))}}function _(r,a){return r<=a&&r>=0&&a>=0&&Number.isInteger(r)&&r!==1/0&&(Number.isInteger(a)||a===1/0)}const k=new h(r=>r.ok(r.location.index,r.location));function d(r){return new h(a=>a.ok(a.location.index,r))}const I=new h(r=>r.location.index<r.input.length?r.fail(r.location.index,["<EOF>"]):r.ok(r.location.index,"<EOF>"));function s(r){for(const t of r.flags)switch(t){case"i":case"s":case"m":case"u":continue;default:throw new Error("only the regexp flags 'imsu' are supported")}const a=new RegExp(r.source,r.flags+"y");return new h(t=>{const e=t.location.index;a.lastIndex=e;const n=t.input.match(a);if(n){const o=e+n[0].length,i=t.input.slice(e,o);return t.ok(o,i)}return t.fail(e,[String(r)])})}function b(...r){return r.reduce((a,t)=>a.chain(e=>t.map(n=>[...e,n])),d([]))}function p(...r){return r.reduce((a,t)=>a.or(t))}function K(r,a){return[...new Set([...r,...a])]}class w{constructor(a){this.input=a.input,this.location=a.location}moveTo(a){return new w({input:this.input,location:a})}_internal_move(a){if(a===this.location.index)return this.location;const t=this.location.index,e=a,n=this.input.slice(t,e);let{line:o,column:i}=this.location;for(const c of n)c===`
`?(o++,i=1):i++;return{index:a,line:o,column:i}}ok(a,t){return{type:"ActionOK",value:t,location:this._internal_move(a),furthest:{index:-1,line:-1,column:-1},expected:[]}}fail(a,t){return{type:"ActionFail",furthest:this._internal_move(a),expected:t}}merge(a,t){if(t.furthest.index>a.furthest.index)return t;const e=t.furthest.index===a.furthest.index?K(a.expected,t.expected):a.expected;return t.type==="ActionOK"?{type:"ActionOK",location:t.location,value:t.value,furthest:a.furthest,expected:e}:{type:"ActionFail",furthest:a.furthest,expected:e}}}function u(r){return function(t){return b(k,t,k).map(function([n,o,i]){return{type:r,start:n.index,end:i.index,...o}})}}const $=s(/\s*/),C=b(s(/\^\s*/),p(s(/{[a-zA-Z0-9+-]+}/),s(/[a-zA-Z0-9+-]/))).map(([,r])=>({content:r})).thru(u("Superscript")),F=b(s(/_\s*/),p(s(/{[a-zA-Z0-9+-]+}/),s(/[a-zA-Z0-9+-]/))).map(([r,a])=>({content:a})).thru(u("Subscript")),O=p(s(/\\[a-zA-Z]+/),s(/\\\|/)).map(r=>({macro:r})).thru(u("NullaryMacro")),M=s(/\{.*?\}/).map(r=>({value:r})).thru(u("CurlyGroup")),Z=b(p(s(/\\mathbb(?![a-zA-Z])/),s(/\\mathfrak(?![a-zA-Z])/),s(/\\mathcal(?![a-zA-Z])/),s(/\\not(?![a-zA-Z])/)),$,p(M,O,s(/[a-zA-Z0-9]/).map(r=>({value:r})).thru(u("PlainText")))).map(([r,a,t])=>({macro:r,argument:t})).thru(u("UnaryMacro")),B=s(/[\^_\\]/).map(r=>({value:r})).thru(u("PlainText")),j=s(/[^_^\\]+/).map(r=>({value:r})).thru(u("PlainText")),D=p(C,F,Z,O,B,j).repeat().map(r=>({body:r})).thru(u("Program")),g={"\\Alpha":"Α","\\Beta":"Β","\\Gamma":"Γ","\\Delta":"Δ","\\Epsilon":"Ε","\\Zeta":"Ζ","\\Eta":"Η","\\Theta":"Θ","\\Iota":"I","\\Kappa":"Κ","\\Lambda":"Λ","\\Mu":"Μ","\\Nu":"Ν","\\Xi":"Ξ","\\Omicron":"Ο","\\Pi":"Π","\\Rho":"Ρ","\\Sigma":"Σ","\\Tau":"Τ","\\Upsilon":"Υ","\\Phi":"Φ","\\Chi":"Χ","\\Psi":"Ψ","\\Omega":"Ω","\\alpha":"α","\\beta":"β","\\gamma":"γ","\\delta":"δ","\\epsilon":"ϵ","\\zeta":"ζ","\\eta":"η","\\theta":"θ","\\iota":"ι","\\kappa":"κ","\\lambda":"λ","\\mu":"μ","\\nu":"ν","\\xi":"ξ","\\omicron":"ο","\\pi":"π","\\rho":"ρ","\\sigma":"σ","\\tau":"τ","\\upsilon":"υ","\\phi":"ϕ","\\chi":"χ","\\psi":"ψ","\\omega":"ω","\\varepsilon":"ε","\\varnothing":"∅","\\varkappa":"ϰ","\\varphi":"φ","\\varpi":"ϖ","\\varrho":"ϱ","\\varsigma":"ς","\\vartheta":"ϑ","\\neq":"≠","\\equiv":"≡","\\not\\equiv":"≢","\\leq":"≤","\\geq":"≥","\\leqq":"≦","\\geqq":"≧","\\lneqq":"≨","\\gneqq":"≩","\\leqslant":"⩽","\\geqslant":"⩾","\\ll":"≪","\\gg":"≫","\\nless":"≮","\\ngtr":"≯","\\nleq":"≰","\\ngeq":"≱","\\lessequivlnt":"≲","\\greaterequivlnt":"≳","\\prec":"≺","\\succ":"≻","\\preccurlyeq":"≼","\\succcurlyeq":"≽","\\precapprox":"≾","\\succapprox":"≿","\\nprec":"⊀","\\nsucc":"⊁","\\sim":"∼","\\not\\sim":"≁","\\simeq":"≃","\\not\\simeq":"≄","\\backsim":"∽","\\lazysinv":"∾","\\wr":"≀","\\cong":"≅","\\not\\cong":"≇","\\approx":"≈","\\not\\approx":"≉","\\approxeq":"≊","\\approxnotequal":"≆","\\tildetrpl":"≋","\\allequal":"≌","\\asymp":"≍","\\doteq":"≐","\\doteqdot":"≑","\\lneq":"⪇","\\gneq":"⪈","\\preceq":"⪯","\\succeq":"⪰","\\precneqq":"⪵","\\succneqq":"⪶","\\emptyset":"∅","\\in":"∈","\\notin":"∉","\\not\\in":"∉","\\ni":"∋","\\not\\ni":"∌","\\subset":"⊂","\\subseteq":"⊆","\\not\\subset":"⊄","\\not\\subseteq":"⊈","\\supset":"⊃","\\supseteq":"⊇","\\not\\supset":"⊅","\\not\\supseteq":"⊉","\\subsetneq":"⊊","\\supsetneq":"⊋","\\exists":"∃","\\nexists":"∄","\\not\\exists":"∄","\\forall":"∀","\\aleph":"ℵ","\\beth":"ℶ","\\neg":"¬","\\wedge":"∧","\\vee":"∨","\\veebar":"⊻","\\land":"∧","\\lor":"∨","\\top":"⊤","\\bot":"⊥","\\cup":"∪","\\cap":"∩","\\bigcup":"⋃","\\bigcap":"⋂","\\setminus":"∖","\\therefore":"∴","\\because":"∵","\\Box":"□","\\models":"⊨","\\vdash":"⊢","\\rightarrow":"→","\\Rightarrow":"⇒","\\leftarrow":"←","\\Leftarrow":"⇐","\\uparrow":"↑","\\Uparrow":"⇑","\\downarrow":"↓","\\Downarrow":"⇓","\\nwarrow":"↖","\\nearrow":"↗","\\searrow":"↘","\\swarrow":"↙","\\mapsto":"↦","\\to":"→","\\leftrightarrow":"↔","\\hookleftarrow":"↩","\\Leftrightarrow":"⇔","\\rightarrowtail":"↣","\\leftarrowtail":"↢","\\twoheadrightarrow":"↠","\\twoheadleftarrow":"↞","\\hookrightarrow":"↪","\\rightsquigarrow":"⇝","\\rightleftharpoons":"⇌","\\leftrightharpoons":"⇋","\\rightharpoonup":"⇀","\\rightharpoondown":"⇁","\\times":"×","\\div":"÷","\\infty":"∞","\\nabla":"∇","\\partial":"∂","\\sum":"∑","\\prod":"∏","\\coprod":"∐","\\int":"∫","\\iint":"∬","\\iiint":"∭","\\iiiint":"⨌","\\oint":"∮","\\surfintegral":"∯","\\volintegral":"∰","\\Re":"ℜ","\\Im":"ℑ","\\wp":"℘","\\mp":"∓","\\langle":"⟨","\\rangle":"⟩","\\lfloor":"⌊","\\rfloor":"⌋","\\lceil":"⌈","\\rceil":"⌉","\\|":"‖","\\mathbb{a}":"𝕒","\\mathbb{A}":"𝔸","\\mathbb{b}":"𝕓","\\mathbb{B}":"𝔹","\\mathbb{c}":"𝕔","\\mathbb{C}":"ℂ","\\mathbb{d}":"𝕕","\\mathbb{D}":"𝔻","\\mathbb{e}":"𝕖","\\mathbb{E}":"𝔼","\\mathbb{f}":"𝕗","\\mathbb{F}":"𝔽","\\mathbb{g}":"𝕘","\\mathbb{G}":"𝔾","\\mathbb{h}":"𝕙","\\mathbb{H}":"ℍ","\\mathbb{i}":"𝕚","\\mathbb{I}":"𝕀","\\mathbb{j}":"𝕛","\\mathbb{J}":"𝕁","\\mathbb{k}":"𝕜","\\mathbb{K}":"𝕂","\\mathbb{l}":"𝕝","\\mathbb{L}":"𝕃","\\mathbb{m}":"𝕞","\\mathbb{M}":"𝕄","\\mathbb{n}":"𝕟","\\mathbb{N}":"ℕ","\\mathbb{o}":"𝕠","\\mathbb{O}":"𝕆","\\mathbb{p}":"𝕡","\\mathbb{P}":"ℙ","\\mathbb{q}":"𝕢","\\mathbb{Q}":"ℚ","\\mathbb{r}":"𝕣","\\mathbb{R}":"ℝ","\\mathbb{s}":"𝕤","\\mathbb{S}":"𝕊","\\mathbb{t}":"𝕥","\\mathbb{T}":"𝕋","\\mathbb{u}":"𝕦","\\mathbb{U}":"𝕌","\\mathbb{v}":"𝕧","\\mathbb{V}":"𝕍","\\mathbb{x}":"𝕩","\\mathbb{X}":"𝕏","\\mathbb{y}":"𝕪","\\mathbb{Y}":"𝕐","\\mathbb{z}":"𝕫","\\mathbb{Z}":"ℤ","\\mathbb{0}":"𝟘","\\mathbb{1}":"𝟙","\\mathbb{2}":"𝟚","\\mathbb{3}":"𝟛","\\mathbb{4}":"𝟜","\\mathbb{5}":"𝟝","\\mathbb{6}":"𝟞","\\mathbb{7}":"𝟟","\\mathbb{8}":"𝟠","\\mathbb{9}":"𝟡","\\mathfrak{a}":"𝔞","\\mathfrak{A}":"𝔄","\\mathfrak{b}":"𝔟","\\mathfrak{B}":"𝔅","\\mathfrak{c}":"𝔠","\\mathfrak{C}":"ℭ","\\mathfrak{d}":"𝔡","\\mathfrak{D}":"𝔇","\\mathfrak{e}":"𝔢","\\mathfrak{E}":"𝔈","\\mathfrak{f}":"𝔣","\\mathfrak{F}":"𝔉","\\mathfrak{g}":"𝔤","\\mathfrak{G}":"𝔊","\\mathfrak{h}":"𝔥","\\mathfrak{H}":"ℌ","\\mathfrak{i}":"𝔦","\\mathfrak{I}":"ℑ","\\mathfrak{j}":"𝔧","\\mathfrak{J}":"𝔍","\\mathfrak{k}":"𝔨","\\mathfrak{K}":"𝔎","\\mathfrak{l}":"𝔩","\\mathfrak{L}":"𝔏","\\mathfrak{m}":"𝔪","\\mathfrak{M}":"𝔐","\\mathfrak{n}":"𝔫","\\mathfrak{N}":"𝔑","\\mathfrak{o}":"𝔬","\\mathfrak{O}":"𝔒","\\mathfrak{p}":"𝔭","\\mathfrak{P}":"𝔓","\\mathfrak{q}":"𝔮","\\mathfrak{Q}":"𝔔","\\mathfrak{r}":"𝔯","\\mathfrak{R}":"ℜ","\\mathfrak{s}":"𝔰","\\mathfrak{S}":"𝔖","\\mathfrak{t}":"𝔱","\\mathfrak{T}":"𝔗","\\mathfrak{u}":"𝔲","\\mathfrak{U}":"𝔘","\\mathfrak{v}":"𝔳","\\mathfrak{V}":"𝔙","\\mathfrak{x}":"𝔵","\\mathfrak{X}":"𝔛","\\mathfrak{y}":"𝔶","\\mathfrak{Y}":"𝔜","\\mathfrak{z}":"𝔷","\\mathfrak{Z}":"ℨ","\\mathcal{a}":"𝒶","\\mathcal{A}":"𝒜","\\mathcal{b}":"𝒷","\\mathcal{B}":"ℬ","\\mathcal{c}":"𝒸","\\mathcal{C}":"𝒞","\\mathcal{d}":"𝒹","\\mathcal{D}":"𝒟","\\mathcal{e}":"ℯ","\\mathcal{E}":"ℰ","\\mathcal{f}":"𝒻","\\mathcal{F}":"ℱ","\\mathcal{g}":"ℊ","\\mathcal{G}":"𝒢","\\mathcal{h}":"𝒽","\\mathcal{H}":"ℋ","\\mathcal{i}":"𝒾","\\mathcal{I}":"ℐ","\\mathcal{j}":"𝒿","\\mathcal{J}":"𝒥","\\mathcal{k}":"𝓀","\\mathcal{K}":"𝒦","\\mathcal{l}":"𝓁","\\mathcal{L}":"ℒ","\\mathcal{m}":"𝓂","\\mathcal{M}":"ℳ","\\mathcal{n}":"𝓃","\\mathcal{N}":"𝒩","\\mathcal{o}":"ℴ","\\mathcal{O}":"𝒪","\\mathcal{p}":"𝓅","\\mathcal{P}":"𝒫","\\mathcal{q}":"𝓆","\\mathcal{Q}":"𝒬","\\mathcal{r}":"𝓇","\\mathcal{R}":"ℛ","\\mathcal{s}":"𝓈","\\mathcal{S}":"𝒮","\\mathcal{t}":"𝓉","\\mathcal{T}":"𝒯","\\mathcal{u}":"𝓊","\\mathcal{U}":"𝒰","\\mathcal{v}":"𝓋","\\mathcal{V}":"𝒱","\\mathcal{w}":"𝓌","\\mathcal{W}":"𝒲","\\mathcal{x}":"𝓍","\\mathcal{X}":"𝒳","\\mathcal{y}":"𝓎","\\mathcal{Y}":"𝒴","\\mathcal{z}":"𝓏","\\mathcal{Z}":"𝒵",_0:"₀",_1:"₁",_2:"₂",_3:"₃",_4:"₄",_5:"₅",_6:"₆",_7:"₇",_8:"₈",_9:"₉","^0":"⁰","^1":"¹","^2":"²","^3":"³","^4":"⁴","^5":"⁵","^6":"⁶","^7":"⁷","^8":"⁸","^9":"⁹","_+":"₊","_-":"₋","_(":"₍","_)":"₎","^+":"⁺","^-":"⁻","^(":"⁽","^)":"⁾",_a:"ₐ",_e:"ₑ",_h:"ₕ",_i:"ᵢ",_j:"ⱼ",_k:"ₖ",_l:"ₗ",_m:"ₘ",_n:"ₙ",_o:"ₒ",_p:"ₚ",_r:"ᵣ",_s:"ₛ",_t:"ₜ",_u:"ᵤ",_v:"ᵥ",_x:"ₓ","^a":"ᵃ","^b":"ᵇ","^c":"ᶜ","^d":"ᵈ","^e":"ᵉ","^f":"ᶠ","^g":"ᵍ","^h":"ʰ","^i":"^i","^j":"ʲ","^k":"ᵏ","^l":"ˡ","^m":"ᵐ","^n":"ⁿ","^o":"ᵒ","^p":"ᵖ","^r":"ʳ","^s":"ˢ","^t":"ᵗ","^u":"ᵘ","^v":"ᵛ","^w":"ʷ","^x":"ˣ","^y":"ʸ","^z":"ᶻ","\\pm":"±","\\dotplus":"∔","\\bullet":"∙","\\cdot":"⋅","\\oplus":"⊕","\\ominus":"⊖","\\otimes":"⊗","\\oslash":"⊘","\\odot":"⊙","\\circ":"∘","\\surd":"√","\\propto":"∝","\\angle":"∠","\\measuredangle":"∡","\\sphericalangle":"∢","\\mid":"∣","\\nmid":"∤","\\not\\mid":"∤","\\parallel":"∥","\\nparallel":"∦","\\not\\parallel":"∦","\\flat":"♭","\\natural":"♮","\\sharp":"♯"};function R([r,a],[t,e]){return t<=r&&r<e||t<=a-1&&a-1<e||r<=t&&t<a||r<=e-1&&e-1<a}function y(r){return r=r.trim(),r[0]==="{"&&r[r.length-1]==="}"?y(r.slice(1,r.length-1)):r}function f(r,a){return r.slice(a.start,a.end)}function U(r,a,t={}){switch(a.type){case"PlainText":case"CurlyGroup":return f(r,a);case"UnaryMacro":{const e=f(r,a.argument),n=a.macro==="\\not"?`${a.macro}${y(e)}`:`${a.macro}{${y(e)}}`;return g[n]||f(r,a)}case"NullaryMacro":return g[a.macro]||f(r,a);case"Subscript":case"Superscript":{if(!t.subscripts)return f(r,a);let e="";for(const n of y(a.content)){const o=a.type==="Subscript"?"_":"^",i=g[`${o}${n}`];if(i===void 0)return f(r,a);e+=i}return e}}throw console.error(a),new Error("unhandled case")}function G(r,a,t,e,n={}){const o=a.body;let i=-1,c="";for(const l of o)R([t,e],[l.start,l.end])?c+=U(r,l,n):c+=r.slice(l.start,l.end),l.start<e&&e<=l.end&&(i=l.type!=="PlainText"?c.length:c.length-(l.end-e));return{text:c,cursor:i}}function N(r,a,t,e={}){t=Math.min(t,r.length);const n=D.tryParse(r);return G(r,n,a,t,e)}function V(r,a){if(r.tagName==="INPUT"||r.tagName==="TEXTAREA"){const t=r,e=t.selectionStart||0,n=t.selectionEnd||0,{text:o,cursor:i}=N(t.value,e,n,a);t.select(),r.ownerDocument.execCommand("insertText",!1,o),t.selectionStart=t.selectionEnd=i}else if(r.contentEditable){const t=r.ownerDocument.getSelection();if(!t||!t.anchorNode||!t.focusNode)return;const e=x(t.anchorNode,t.focusNode),[n]=e,o=e[e.length-1],i=n===t.anchorNode&&t.anchorOffset<=t.focusOffset,[c,l]=i?[t.anchorOffset,t.focusOffset]:[t.focusOffset,t.anchorOffset],A=3;let v;for(const m of e)if(m.nodeType===A){const T=m===e[0]?c:0,S=m===e[e.length-1]?l:m.nodeValue?.length||0,{text:E,cursor:P}=N(m.nodeValue||"",T,S,a);m.nodeValue=E,v=P}t.collapse(o,v)}}document.addEventListener("DOMContentLoaded",()=>{function r(){return Object.entries(g).map(([n,o])=>`<div class="symbol-entry">
        <span class="symbol-key">${n}</span>
        <span class="symbol-value">${o}</span>
      </div>`).join(`
`)}const a=document.querySelector(".symbol-table");a&&(a.innerHTML=r());const t=document.querySelector(".try-here");t&&t.addEventListener("keydown",e=>{e.key==="w"&&(e.altKey===!0||e.ctrlKey)&&V(t,{subscripts:!0})})});
//# sourceMappingURL=main-bp1Lx8IY.js.map
